{"version":3,"file":"9e81ea5ae9f82978bc4b.js","sources":["webpack:///./pages/login.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst Cookie = process.client ? require('js-cookie') : undefined;\n\nexport default {\n  layout : 'blank',\n  head:{\n    title: 'Login',\n    script: [\n      { src: \"//developers.kakao.com/sdk/js/kakao.min.js\" }\n    ]\n  },\n  mounted(){\n    $('#login_id').val(this.getCookie('login_id'));\n  },\n  data(){\n    return {\n      appKey: process.env.APPKEY,\n      login_fail : false\n    }\n  },\n  methods : {\n      login ({ commit }) {\n      var username = $('#login_id').val();\n      var password = $('#password').val();\n      return fetch('/auth/login', {\n        // 클라이언트 Cookies를 서버로 보냅니다.\n        credentials: 'same-origin',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      })\n      .then((res) => {\n        if (res.status === 401) {\n          throw new Error('Bad credentials')\n        } else {\n          return res.json()\n        }\n      })\n      .then((authUser) => {\n        this.$store.commit('SET_AUTH_TOKEN', authUser.auth)\n        this.$store.commit('SET_USER_INFO', authUser.userInfo)\n        window.location.href = document.referrer;\n      })\n    },\n    loginWithKakao() {\n      try {\n        Kakao.init(this.appKey);\n      }\n      catch(e) {\n        console.log(e);\n      }\n      var axios = this.$axios;\n      var store = this.$store;\n      var router = this.$router;\n      var res_access_token;\n      Kakao.Auth.login({\n        success: function(authObj) {\n          res_access_token = authObj.access_token        \n          return fetch('/oauth/kakao', {\n            // 클라이언트 Cookies를 서버로 보냅니다.\n            credentials: 'same-origin',\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({res_access_token})\n          })\n          .then((res) => {\n            if (res.status === 401) {\n              throw new Error('Bad credentials')\n            } else {\n              return res.json()\n            }\n          })\n          .then((authUser) => {\n            store.commit('SET_AUTH_TOKEN', authUser.auth)\n            store.commit('SET_USER_INFO', authUser.userInfo)\n            window.location.href = document.referrer;\n          })\n        },\n        fail: function(err) {\n          alert(JSON.stringify(err));\n        }\n      });\n    },\n    setCookie : function (cName, cValue, cDay){\n      var expire = new Date();\n      expire.setDate(expire.getDate() + cDay);\n      var cookies = cName + '=' + escape(cValue) + '; path=/ '; // 한글 깨짐을 막기위해 escape(cValue)를 합니다.\n      if(typeof cDay != 'undefined') cookies += ';expires=' + expire.toGMTString() + ';';\n      document.cookie = cookies;\n    },\n    getCookie : function (cName) {\n      cName = cName + '=';\n      var cookieData = document.cookie;\n      var start = cookieData.indexOf(cName);\n      var cValue = '';\n      if(start != -1){\n          start += cName.length;\n          var end = cookieData.indexOf(';', start);\n          if(end == -1)end = cookieData.length;\n          cValue = cookieData.substring(start, end);\n      }\n      return unescape(cValue);\n    }\n  }\n}\n"],"mappings":"AAoDA","sourceRoot":""}