{"version":3,"file":"ba25637a512a2abb1eb3.js","sources":["webpack:///./pages/login.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nconst Cookie = process.client ? require('js-cookie') : undefined;\r\n\r\nexport default {\r\n  layout : 'blank',\r\n  head:{\r\n    title: 'Login',\r\n    script: [\r\n      { src: \"//developers.kakao.com/sdk/js/kakao.min.js\" }\r\n    ]\r\n  },\r\n  mounted(){\r\n    $('#login_id').val(this.getCookie('login_id'));\r\n  },\r\n  data(){\r\n    return {\r\n      appKey: '45921a9a4ebf5aefbb73b2bec262dfe1',\r\n      login_fail : false\r\n    }\r\n  },\r\n  methods : {\r\n      login ({ commit }) {\r\n      var username = $('#login_id').val();\r\n      var password = $('#password').val();\r\n      return fetch('/auth/login', {\r\n        // 클라이언트 Cookies를 서버로 보냅니다.\r\n        credentials: 'same-origin',\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          password\r\n        })\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          throw new Error('Bad credentials')\r\n        } else {\r\n          return res.json()\r\n        }\r\n      })\r\n      .then((authUser) => {\r\n        this.$store.commit('SET_AUTH_TOKEN', authUser.auth)\r\n        this.$store.commit('SET_USER_INFO', authUser.userInfo)\r\n        history.back();\r\n      })\r\n    },\r\n    loginWithKakao() {\r\n      try {\r\n        Kakao.init(this.appKey);\r\n      }\r\n      catch(e) {\r\n        console.log(e);\r\n      }\r\n      var axios = this.$axios;\r\n      var store = this.$store;\r\n      var router = this.$router;\r\n      var res_access_token;\r\n      Kakao.Auth.login({\r\n        success: function(authObj) {\r\n          res_access_token = authObj.access_token        \r\n          return fetch('/oauth/kakao', {\r\n            // 클라이언트 Cookies를 서버로 보냅니다.\r\n            credentials: 'same-origin',\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({res_access_token})\r\n          })\r\n          .then((res) => {\r\n            if (res.status === 401) {\r\n              throw new Error('Bad credentials')\r\n            } else {\r\n              return res.json()\r\n            }\r\n          })\r\n          .then((authUser) => {\r\n            store.commit('SET_AUTH_TOKEN', authUser.auth)\r\n            store.commit('SET_USER_INFO', authUser.userInfo)\r\n            history.back();\r\n          })\r\n        },\r\n        fail: function(err) {\r\n          alert(JSON.stringify(err));\r\n        }\r\n      });\r\n    },\r\n    setCookie : function (cName, cValue, cDay){\r\n      var expire = new Date();\r\n      expire.setDate(expire.getDate() + cDay);\r\n      var cookies = cName + '=' + escape(cValue) + '; path=/ '; // 한글 깨짐을 막기위해 escape(cValue)를 합니다.\r\n      if(typeof cDay != 'undefined') cookies += ';expires=' + expire.toGMTString() + ';';\r\n      document.cookie = cookies;\r\n    },\r\n    getCookie : function (cName) {\r\n      cName = cName + '=';\r\n      var cookieData = document.cookie;\r\n      var start = cookieData.indexOf(cName);\r\n      var cValue = '';\r\n      if(start != -1){\r\n          start += cName.length;\r\n          var end = cookieData.indexOf(';', start);\r\n          if(end == -1)end = cookieData.length;\r\n          cValue = cookieData.substring(start, end);\r\n      }\r\n      return unescape(cValue);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAoDA","sourceRoot":""}